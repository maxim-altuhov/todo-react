$boxsize: 20;
$gutter: 5;
$x1: $boxsize + $gutter;
$x2: $x1 * 2;
$duration: 7;

.loader {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotateZ(45deg);
  width: #{($boxsize * 3) + ($gutter * 2)}px;
  height: #{($boxsize * 3) + ($gutter * 2)}px;

  > div {
    position: absolute;
    top: 0px;
    left: 0px;
    display: inline-block;
    width: #{$boxsize}px;
    height: #{$boxsize}px;
    transform: translate(0px, 0px);
    animation-duration: #{$duration}s;
    animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    animation-direction: normal;
    animation-timing-function: cubic-bezier(0.75, 0, 0, 0.75);

    &:before {
      content: '';
      display: inline-block;
      width: 100%;
      height: 100%;
      background-color: #1abc9c;
      border-radius: 3px;
      animation-name: animation-background;
      animation-duration: 30s;
      animation-iteration-count: infinite;
      animation-direction: normal;
      animation-timing-function: ease-in-out;
    }

    $positions: (
      '0px, #{ $x1 }px',
      '0px, #{ $x2 }px',
      '#{ $x1 }px, #{ $x2 }px',
      '#{ $x1 }px, #{ $x1 }px',
      '#{ $x2 }px, #{ $x1 }px',
      '#{ $x2 }px, 0px',
      '#{ $x1 }px, 0px'
    );

    @for $i from 1 through 7 {
      $part: $duration / length($positions);
      $delay: (7 - ($i * $part)) - ($duration / $part);

      &:nth-child(#{$i}) {
        animation-delay: #{$delay}s;
        transform: translate(#{nth($positions, $i)});
        animation-name: position#{$i};
      }
    }
  }
}

@for $i from 1 through 8 {
  $positions: (
    '0px, #{ $x1 }px',
    '0px, 0px',
    '#{ $x1 }px, 0px',
    '#{ $x2 }px, 0px',
    '#{ $x2 }px, #{ $x1 }px',
    '#{ $x1 }px, #{ $x1 }px',
    '#{ $x1 }px, #{ $x2 }px',
    '0px, #{ $x2 }px',
    '0px, #{ $x1 }px'
  );

  @keyframes position#{ $i } {
    $frames: length($positions) - 1;

    @for $ii from 0 through $frames {
      $percent: $ii * (100 / $frames);
      $percent2: $percent + 5;
      $positionIndex: $ii + 1;
      $altIndex: $positionIndex - (length($positions));
      $position: if(
        length($positions) < $positionIndex,
        nth($positions, $altIndex),
        nth($positions, $positionIndex)
      );

      #{$percent + '%'} {
        transform: translate(#{$position});
      }

      #{$percent2 + '%'} {
        transform: translate(#{$position});
      }
    }
  }
}

@keyframes animation-background {
  10% {
    background-color: #9b59b6;
  }
  20% {
    background-color: #2980b9;
  }
  30% {
    background-color: #c0392b;
  }
  40% {
    background-color: #16a085;
  }
  50% {
    background-color: #f39c12;
  }
  60% {
    background-color: #27ae60;
  }
  70% {
    background-color: #419fdd;
  }
  80% {
    background-color: #f1c40f;
  }
  90% {
    background-color: #1abc9c;
  }
}
